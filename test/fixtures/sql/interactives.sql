INSERT INTO "interactive" ("id", "outline_entity_id", "type", "difficulty", "data", "meta", "created_at", "updated_at") VALUES
('1', '1', 'multipleChoice', '1', '{"question": "What is a variable in programming?", "answer": "A container used to store information.", "description": "Reviewing the basic concept of variables in programming.", "difficulty": "easy", "content": ["A function that performs operations on data.", "A condition that controls the flow of the program.", "A container used to store information.", "A type of loop that iterates over a sequence."], "shortcode": "[multipleChoice difficulty=\"easy\"]\n[description]Reviewing the basic concept of variables in programming.[/description]\n[question]What is a variable in programming?[/question]\n\n- [ ] A function that performs operations on data.\n- [x] A container used to store information.\n- [ ] A type of loop that iterates over a sequence.\n- [ ] A condition that controls the flow of the program.\n\n[/multipleChoice]", "index": 43}', '{"pageId": 248, "responseId": 4}', '2024-05-30 16:36:47', NULL),
('2', '1', 'multipleChoice', '1', '{"question": "What do data types in programming specify?", "answer": "The kind of data that can be stored in a variable.", "description": "Identifying the role of data types in programming.", "difficulty": "easy", "content": ["The kind of data that can be stored in a variable.", "The number of lines of code in the program.", "The speed at which a program runs.", "The functions available in the program."], "shortcode": "[multipleChoice difficulty=\"easy\"]\n[description]Identifying the role of data types in programming.[/description]\n[question]What do data types in programming specify?[/question]\n\n- [ ] The speed at which a program runs.\n- [ ] The functions available in the program.\n- [x] The kind of data that can be stored in a variable.\n- [ ] The number of lines of code in the program.\n\n[/multipleChoice]", "index": 535}', '{"pageId": 248, "responseId": 4}', '2024-05-30 16:36:47', NULL),
('3', '1', 'multipleChoice', '1', '{"question": "Which of the following best illustrates the relationship between variables and data types, similar to labeling boxes at a party?", "answer": "Variables are the boxes, and data types are the labels specifying what can be inside.", "description": "Understanding the practical use of variables and data types.", "difficulty": "intermediate", "content": ["Variables are the labels, and data types are the contents of the boxes.", "Variables are the boxes, and data types are the labels specifying what can be inside.", "Variables are the guests, and data types are the kinds of drinks they prefer.", "Variables are the types of snacks, and data types are the kinds of bags they come in."], "shortcode": "[multipleChoice difficulty=\"intermediate\"]\n[description]Understanding the practical use of variables and data types.[/description]\n[question]Which of the following best illustrates the relationship between variables and data types, similar to labeling boxes at a party?[/question]\n\n- [ ] Variables are the labels, and data types are the contents of the boxes.\n- [x] Variables are the boxes, and data types are the labels specifying what can be inside.\n- [ ] Variables are the types of snacks, and data types are the kinds of bags they come in.\n- [ ] Variables are the guests, and data types are the kinds of drinks they prefer.\n\n[/multipleChoice]", "index": 1018}', '{"pageId": 248, "responseId": 4}', '2024-05-30 16:36:47', NULL),
('4', '1', 'multipleChoice', '1', '{"question": "How are variables and data types typically used in developing a web application?", "answer": "Variables store user information like names and email addresses, and data types ensure the application handles these efficiently.", "description": "Evaluating understanding of examples in the tech industry for using variables and data types.", "difficulty": "intermediate", "content": ["Variables store user information like names and email addresses, and data types ensure the application handles these efficiently.", "Data types are used to calculate the page loading speed, and variables adjust the layout.", "Variables handle the server requests, and data types set up the database schema.", "Variables are used to draw the user interface, while data types store the images."], "shortcode": "[multipleChoice difficulty=\"intermediate\"]\n[description]Evaluating understanding of examples in the tech industry for using variables and data types.[/description]\n[question]How are variables and data types typically used in developing a web application?[/question]\n\n- [ ] Variables are used to draw the user interface, while data types store the images.\n- [ ] Data types are used to calculate the page loading speed, and variables adjust the layout.\n- [ ] Variables handle the server requests, and data types set up the database schema.\n- [x] Variables store user information like names and email addresses, and data types ensure the application handles these efficiently.\n\n[/multipleChoice]", "index": 1757}', '{"pageId": 248, "responseId": 4}', '2024-05-30 16:36:47', NULL),
('5', '24', 'codeEditor', '1', '{"question": "Write a Go program that outputs \"Hello, Go!\"", "difficulty": "easy", "expectedOutput": "\"Hello, Go!\"", "exampleAnswer": "package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello, Go!\")\n}\n", "testCase": "package main\n\nimport (\n    \"testing\"\n    \"bytes\"\n    \"os\"\n)\n\nfunc TestMainOutput(t *testing.T) {\n    expected := \"Hello, Go!\\n\"\n    var buf bytes.Buffer\n    stdout := os.Stdout\n    defer func() { os.Stdout = stdout }()\n    os.Stdout = &buf\n\n    main()\n\n    actual := buf.String()\n    if actual != expected {\n        t.Fatalf(\"Expected %q but got %q\", expected, actual)\n    }\n}\n", "mustContain": ["\"fmt.Println(\\\"Hello, Go!\\\")\"", "\"func main()\""], "language": "go", "shortcode": "[codeEditor difficulty=\"easy\"]\n[question]Write a Go program that outputs \"Hello, Go!\"[/question]\n[description]\nIn this exercise, you will write a simple Go program that prints \"Hello, Go!\" to the console. \nThis is a great way to get familiar with Go syntax and the basic structure of a Go program.\n[/description]\n\n[editorContent]\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    // Write your code here\n    \n}\n```\n[/editorContent]\n\n[expectedOutput]\"Hello, Go!\"[/expectedOutput]\n[mustContain]\"fmt.Println(\\\"Hello, Go!\\\")\"[/mustContain]\n[mustContain]\"func main()\"[/mustContain]\n[exampleAnswer]\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello, Go!\")\n}\n```\n[/exampleAnswer]\n[testCase]\n```go\npackage main\n\nimport (\n\t\"testing\"\n\t\"bytes\"\n\t\"os\"\n)\n\nfunc TestMainOutput(t *testing.T) {\n\texpected := \"Hello, Go!\\n\"\n\tvar buf bytes.Buffer\n\tstdout := os.Stdout\n\tdefer func() { os.Stdout = stdout }()\n\tos.Stdout = &buf\n\n\tmain()\n\n\tactual := buf.String()\n\tif actual != expected {\n\t\tt.Fatalf(\"Expected %q but got %q\", expected, actual)\n\t}\n}\n```\n[/testCase]\n\n[/codeEditor]", "index": 12}', '{"pageId": 248, "responseId": 6}', '2024-05-30 16:36:47', NULL),
('6', '24', 'multipleChoice', '1', '{"question": "What is the primary purpose of authentication?", "answer": "To verify the user''s identity", "description": "Authentication vs. Authorization basics", "difficulty": "easy", "content": ["To store user passwords", "To verify the user''s identity", "To determine what a user is allowed to do", "To manage user roles"], "shortcode": "[multipleChoice difficulty=\"easy\"]\n[description]Authentication vs. Authorization basics[/description]\n[question]What is the primary purpose of authentication?[/question]\n\n- [ ] To determine what a user is allowed to do\n- [x] To verify the user''s identity\n- [ ] To manage user roles\n- [ ] To store user passwords\n\n[/multipleChoice]", "index": 37}', '{"pageId": 249, "responseId": 8}', '2024-05-30 16:36:47', NULL),
('7', '24', 'multipleChoice', '1', '{"question": "In the provided Go authentication code, which statement correctly describes its purpose?", "answer": "It verifies if the provided username and password match the hardcoded credentials.", "description": "Understanding Go code for authentication", "difficulty": "intermediate", "content": ["It verifies if the provided username and password match the hardcoded credentials.", "It checks if the username exists in the database.", "It logs the user\u2019s actions.", "It stores user credentials securely."], "shortcode": "[multipleChoice difficulty=\"intermediate\"]\n[description]Understanding Go code for authentication[/description]\n[question]In the provided Go authentication code, which statement correctly describes its purpose?[/question]\n\n- [ ] It checks if the username exists in the database.\n- [ ] It logs the user\u2019s actions.\n- [x] It verifies if the provided username and password match the hardcoded credentials.\n- [ ] It stores user credentials securely.\n\n[/multipleChoice]", "index": 445}', '{"pageId": 249, "responseId": 8}', '2024-05-30 16:36:47', NULL),
('8', '24', 'multipleChoice', '1', '{"question": "Which variable in the Go authorization example is responsible for storing the allowable actions for each role?", "answer": "permissions", "description": "Authorization logic in Go", "difficulty": "advanced", "content": ["permissions", "role", "allowedActions", "action"], "shortcode": "[multipleChoice difficulty=\"advanced\"]\n[description]Authorization logic in Go[/description]\n[question]Which variable in the Go authorization example is responsible for storing the allowable actions for each role?[/question]\n\n- [ ] action\n- [ ] role\n- [x] permissions\n- [ ] allowedActions\n\n[/multipleChoice]", "index": 985}', '{"pageId": 249, "responseId": 8}', '2024-05-30 16:36:47', NULL),
('9', '24', 'multipleChoice', '1', '{"question": "In the Go authorization code, what happens if the \\\"role\\\" does not exist in the \\\"permissions\\\" map?", "answer": "The authorization fails.", "description": "Role and action in authorization example", "difficulty": "intermediate", "content": ["The authorization succeeds.", "The program crashes.", "A new role is created.", "The authorization fails."], "shortcode": "[multipleChoice difficulty=\"intermediate\"]\n[description]Role and action in authorization example[/description]\n[question]In the Go authorization code, what happens if the \\\"role\\\" does not exist in the \\\"permissions\\\" map?[/question]\n\n- [x] The authorization fails.\n- [ ] The authorization succeeds.\n- [ ] The program crashes.\n- [ ] A new role is created.\n\n[/multipleChoice]", "index": 1369}', '{"pageId": 249, "responseId": 8}', '2024-05-30 16:36:47', NULL),
('10', '25', 'codeEditor', '1', '{"question": "Write a Go function that returns the larger of two integers.", "difficulty": "easy", "expectedOutput": "20\n5", "exampleAnswer": "package main\n\nimport \"fmt\"\n\nfunc max(a int, b int) int {\n    if a > b {\n        return a\n    } \n    return b\n}\n\nfunc main() {\n    fmt.Println(max(10, 20)) // should print 20\n    fmt.Println(max(5, 3))   // should print 5\n}\n", "testCase": "package main\n\nimport \"testing\"\n\nfunc TestMax(t *testing.T) {\n    result := max(10, 20)\n    if result != 20 {\n        t.Errorf(\"max(10, 20) = %d; want 20\", result)\n    }\n\n    result = max(5, 3)\n    if result != 5 {\n        t.Errorf(\"max(5, 3) = %d; want 5\", result)\n    }\n\n    result = max(7, 7)\n    if result != 7 {\n        t.Errorf(\"max(7, 7) = %d; want 7\", result)\n    }\n}\n", "mustContain": ["func max(a int, b int) int {"], "language": "go", "shortcode": "[codeEditor difficulty=\"easy\"]\n[question]Write a Go function that returns the larger of two integers.[/question]\n\n[editorContent]\n```go\npackage main\n\nimport \"fmt\"\n\n// your code here\n\nfunc main() {\n    fmt.Println(max(10, 20)) // should print 20\n    fmt.Println(max(5, 3))   // should print 5\n}\n```\n[/editorContent]\n\n[expectedOutput]\n20\n5\n[/expectedOutput]\n[mustContain]func max(a int, b int) int {[/mustContain]\n[exampleAnswer]\n```go\npackage main\n\nimport \"fmt\"\n\nfunc max(a int, b int) int {\n    if a > b {\n        return a\n    } \n    return b\n}\n\nfunc main() {\n    fmt.Println(max(10, 20)) // should print 20\n    fmt.Println(max(5, 3))   // should print 5\n}\n```\n[/exampleAnswer]\n[testCase]\n```go\npackage main\n\nimport \"testing\"\n\nfunc TestMax(t *testing.T) {\n    result := max(10, 20)\n    if result != 20 {\n        t.Errorf(\"max(10, 20) = %d; want 20\", result)\n    }\n\n    result = max(5, 3)\n    if result != 5 {\n        t.Errorf(\"max(5, 3) = %d; want 5\", result)\n    }\n\n    result = max(7, 7)\n    if result != 7 {\n        t.Errorf(\"max(7, 7) = %d; want 7\", result)\n    }\n}\n```\n[/testCase]\n\n[/codeEditor]", "index": 12}', '{"pageId": 249, "responseId": 10}', '2024-05-30 16:36:47', NULL);